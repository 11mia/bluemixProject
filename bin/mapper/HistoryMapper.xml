<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ibmMeeting.Dao.HistoryDao">

    <!-- property : VO 변수명, column : SQL 변수명 -->
	<resultMap type="com.ibmMeeting.VO.History" id="history_resultmap">
    	<id column="hst_no" property="hstNo"/>
    	<result column="hst_rsv_comp" property="hstRsvComp"/>
    	<result column="hst_rsv_title" property="hstRsvTitle"/>
    	<result column="hst_date" property="hstDate"/>
    	<result column="hst_total_time" property="hstTotalTime"/>
    	<result column="hst_start_time" property="hstStartTime"/>
    	<result column="hst_end_time" property="hstEndTime"/>
    	<result column="hst_rsv_state" property="hstRsvState"/>
    	<result column="hst_rsv_mem_nm" property="hstRsvMemNm"/>
    	<result column="hst_rsv_mem_pn" property="hstRsvMemPn"/>
    	<result column="hst_rsv_mem_em" property="hstRsvMemEm"/>
    	<result column="hst_del_pwd" property="hstDelPwd"/>
    	<result column="hst_reg_date" property="hstRegDate"/>
    	<result column="hst_conf_no" property="hstConfNo"/>
    	<result column="hst_repeat_period" property="hstRepeatPeriod"/>
    	<result column="hst_setting" property="hstSetting"/>
    	<result column="hst_repeat_no" property="hstRepeatNo"/>
   	</resultMap>
 	
 	<!-- 작성자 : 박세연 -->
 	<!-- 새로운 예약 등록시 history table에 등록 -->
	<insert id="registHistory" parameterType="com.ibmMeeting.VO.History">
		INSERT INTO HISTORY
		VALUES (#{hstNo}, #{hstRsvComp}, #{hstRsvTitle}, #{hstDate}, #{hstTotalTime}, #{hstStartTime}, #{hstEndTime}, #{hstRsvState}, #{hstRsvMemNm}, #{hstRsvMemPn}, #{hstRsvMemEm}, #{hstDelPwd}, #{hstRegDate}, #{hstConfNo}, #{hstRepeatPeriod}, #{hstSetting}, #{hstRepeatNo})
	</insert>




	<!-- 최문정 : 날짜별 History 검색 및 출력(관리자 예약내역페이지) -->
	<select id="searchHistoryByDate" parameterType="HashMap" resultType="HashMap">
		SELECT H.HST_DATE,
			   H.HST_START_TIME,
			   H.HST_END_TIME,
			   C.CONF_NM,
			   H.HST_RSV_TITLE,
			   H.HST_RSV_MEM_NM,
			   H.HST_RSV_MEM_PN,
			   H.HST_REPEAT_PERIOD,
			   H.HST_SETTING,
			   H.HST_RSV_STATE,
			   H.HST_REG_DATE	   
		FROM HISTORY H, CONFERENCE C
		WHERE H.HST_CONF_NO = C.CONF_NO
		AND HST_DATE BETWEEN #{startDate} AND #{endDate}
		ORDER BY HST_DATE DESC;
	</select>
	
	
	<!-- 최문정 : 입력한 기간 이전의 히스토리 삭제 -->
	<select id="deleteHistoryByDate" parameterType="String">
		<![CDATA[
			DELETE FROM HISTORY WHERE HST_DATE <= #{deleteDate}
		]]>
	</select>












































































































































<select id="reservationDeleteAndInsert" resultType="HashMap">
	<choose>
		<when test="repeatNo!=0">
			INSERT INTO HISTORY (HST_RSV_COMP,HST_RSV_TITLE,HST_DATE,HST_TOTAL_TIME,HST_START_TIME,HST_END_TIME,HST_RSV_STATE,HST_RSV_MEM_NM,HST_RSV_MEM_PN,HST_RSV_MEM_EM,HST_DEL_PWD,HST_REG_DATE,HST_CONF_NO,HST_REPEAT_PERIOD,HST_SETTING,HST_REPEAT_NO) 
			select RSV_COMP,RSV_TITLE,RSV_DATE,RSV_TOTAL_TIME,RSV_START_TIME,RSV_END_TIME,'REJECTED',RSV_MEM_NM,RSV_MEM_PN,RSV_MEM_EM,RSV_DEL_PWD,RSV_REG_DATE,RSV_CONF_NO,RSV_REPEAT_PERIOD,RSV_SETTING,RSV_REPEAT_NO FROM RESERVATION WHERE RSV_CONFIRM_STATE='N' AND  RSV_REPEAT_NO=#{repeatNo};
		</when>
		
		<otherwise>
			INSERT INTO HISTORY (HST_RSV_COMP,HST_RSV_TITLE,HST_DATE,HST_TOTAL_TIME,HST_START_TIME,HST_END_TIME,HST_RSV_STATE,HST_RSV_MEM_NM,HST_RSV_MEM_PN,HST_RSV_MEM_EM,HST_DEL_PWD,HST_REG_DATE,HST_CONF_NO,HST_REPEAT_PERIOD,HST_SETTING,HST_REPEAT_NO) 
			select RSV_COMP,RSV_TITLE,RSV_DATE,RSV_TOTAL_TIME,RSV_START_TIME,RSV_END_TIME,'REJECTED',RSV_MEM_NM,RSV_MEM_PN,RSV_MEM_EM,RSV_DEL_PWD,RSV_REG_DATE,RSV_CONF_NO,RSV_REPEAT_PERIOD,RSV_SETTING,RSV_REPEAT_NO FROM RESERVATION WHERE RSV_CONFIRM_STATE='N' AND RSV_NO=#{reservationNo};
		</otherwise>
	
	</choose>
	
</select>


<select id="reservationDelete" resultType="HashMap">
	
	
	
	DELETE 
	FROM RESERVATION
	<choose>
		<when test="repeatNo!=0">
			WHERE RSV_REPEAT_NO=#{repeatNo};
		</when>
		
		<otherwise>
			WHERE RSV_NO=#{reservationNo};
		</otherwise>
	
	</choose>
	
	
	
</select>
<select id="reservationUpdateAndInsert" resultType="HashMap">
	<choose>
		<when test="repeatNo!=0">
					INSERT INTO HISTORY (HST_RSV_COMP,HST_RSV_TITLE,HST_DATE,HST_TOTAL_TIME,HST_START_TIME,HST_END_TIME,HST_RSV_STATE,HST_RSV_MEM_NM,HST_RSV_MEM_PN,HST_RSV_MEM_EM,HST_DEL_PWD,HST_REG_DATE,HST_CONF_NO,HST_REPEAT_PERIOD,HST_SETTING,HST_REPEAT_NO) 
			select RSV_COMP,RSV_TITLE,RSV_DATE,RSV_TOTAL_TIME,RSV_START_TIME,RSV_END_TIME,'ACCEPT',RSV_MEM_NM,RSV_MEM_PN,RSV_MEM_EM,RSV_DEL_PWD,RSV_REG_DATE,RSV_CONF_NO,RSV_REPEAT_PERIOD,RSV_SETTING,RSV_REPEAT_NO FROM RESERVATION WHERE RSV_CONFIRM_STATE='N' AND  RSV_REPEAT_NO=#{repeatNo};
		
		</when>
		
		<otherwise>
					INSERT INTO HISTORY (HST_RSV_COMP,HST_RSV_TITLE,HST_DATE,HST_TOTAL_TIME,HST_START_TIME,HST_END_TIME,HST_RSV_STATE,HST_RSV_MEM_NM,HST_RSV_MEM_PN,HST_RSV_MEM_EM,HST_DEL_PWD,HST_REG_DATE,HST_CONF_NO,HST_REPEAT_PERIOD,HST_SETTING,HST_REPEAT_NO) 
			select RSV_COMP,RSV_TITLE,RSV_DATE,RSV_TOTAL_TIME,RSV_START_TIME,RSV_END_TIME,'ACCEPT',RSV_MEM_NM,RSV_MEM_PN,RSV_MEM_EM,RSV_DEL_PWD,RSV_REG_DATE,RSV_CONF_NO,RSV_REPEAT_PERIOD,RSV_SETTING,RSV_REPEAT_NO FROM RESERVATION WHERE RSV_CONFIRM_STATE='N' AND RSV_NO=#{reservationNo};
		
		</otherwise>
	
	</choose>
	
</select>

<select id="reservationUpdate" resultType="HashMap">
	UPDATE RESERVATION
	SET RSV_CONFIRM_STATE="ACCEPT"
	<choose>
		<when test="repeatNo!=0">
			WHERE RSV_REPEAT_NO=#{repeatNo};
		</when>
		
		<otherwise>
			WHERE RSV_NO=#{reservationNo};
		
		</otherwise>
	
	</choose>
	
</select>

<select id="fakeReservation" resultType="HashMap">
	SELECT * ,RSV_NO as LAST_DATE
	FROM RESERVATION r,CONFERENCE c
	WHERE r.RSV_REPEAT_NO=0 and r.RSV_CONFIRM_STATE='N' AND r.RSV_CONF_NO=c.CONF_NO
	UNION ALL
	SELECT * ,max(RSV_DATE) as LAST_DATE
	FROM RESERVATION r,CONFERENCE c
	WHERE RSV_REPEAT_NO!=0 AND r.RSV_CONF_NO=c.CONF_NO AND r.RSV_CONFIRM_STATE='N' GROUP BY RSV_REPEAT_NO ;
</select>

<select id="repeatReservationHead" resultType="HashMap">
	SELECT * 
	FROM RESERVATION r, CONFERENCE c
	WHERE RSV_REPEAT_NO!=0 AND r.RSV_CONF_NO=c.CONF_NO
    GROUP BY RSV_REPEAT_NO;

</select>


<select id="repeatReservationInside" parameterType="int" resultType="HashMap">
			SELECT 
			   r.RSV_DATE,
			   r.RSV_START_TIME,
			   r.RSV_END_TIME,
			   r.RSV_TITLE,
			   r.RSV_MEM_NM,
			   r.RSV_CONFIRM_STATE,
			   r.RSV_REPEAT_PERIOD,
			   r.RSV_REPEAT_NO,
               c.CONF_NM
		FROM RESERVATION r, CONFERENCE c
		WHERE RSV_CONFIRM_STATE = 'N' AND RSV_REPEAT_NO=#{repeatNo} AND r.RSV_CONF_NO=c.CONF_NO;


</select>

<select id="overtimeReservation" resultType="HashMap">
<![CDATA[
		    SELECT *
			FROM RESERVATION r, SETTING s, CONFERENCE c
			WHERE r.RSV_CONFIRM_STATE = 'N' AND r.RSV_CONF_NO=c.CONF_NO AND s.SET_REV_MAX_MONOPOLY<=cast(r.RSV_TOTAL_TIME as char) AND r.RSV_REPEAT_NO=0;

]]>
</select>










































	<select id="getHistoryAndUserInfo" resultType="HashMap" parameterType="Integer">
		select *
		from HISTORY, MEMBER
		where HST_NO = #{hstNo} AND HST_RSV_MEM_PN = MEM_PN;
	</select>
	
	<update id="historyNoShowCancel" parameterType="Integer">
		UPDATE HISTORY
		SET HST_RSV_STATE="NOSHOW CANCEL"
		WHERE HST_NO = #{hstNo}
	</update>


</mapper>